---
# project information
project_name: apprise-api
project_url: "https://github.com/caronc/apprise-api"
project_logo: "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API.

  * Send notifications to more than 100 services.
  * An incredibly lightweight gateway to Apprise.
  * A production ready micro-service at your disposal.
  * A Simple Website to verify and test your configuration with.

  Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Persistent config files"}
param_usage_include_ports: true
param_ports:
  - {external_port: "8000", internal_port: "8000", port_desc: "Port for apprise's interface and API."}
opt_param_usage_include_vols: true
opt_param_volumes:
  - {vol_path: "/attachments", vol_host_path: "/path/to/{{ project_name }}/attachments", desc: "Temporary storage for attachments when sent with notifications."}
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "APPRISE_ATTACH_SIZE", env_value: "0", desc: "Max attachment size in Mb. `0` disables attachments. Must have `/attachments` mounted to set to a positive value."}
readonly_supported: true
nonroot_supported: true
# init diagram
init_diagram: |
  "apprise-api:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-config -> init-apprise-config
    init-os-end -> init-config
    init-apprise-config -> init-config-end
    init-config -> init-config-end
    init-crontab-config -> init-config-end
    init-config -> init-crontab-config
    init-mods-end -> init-custom-files
    base -> init-envfile
    base -> init-migrations
    init-config-end -> init-mods
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-custom-files -> init-services
    init-services -> svc-apprise
    svc-apprise -> legacy-services
    init-services -> svc-cron
    svc-cron -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.21"
  }
  "apprise-api:latest" <- Base Images
# changelog
changelogs:
  - {date: "24.12.24:", desc: "Rebase to Alpine 3.21."}
  - {date: "24.06.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "23.12.23:", desc: "Rebase to Alpine 3.19."}
  - {date: "10.07.23:", desc: "Rebase to Alpine 3.18."}
  - {date: "01.07.23:", desc: "Deprecate armhf. As announced [here](https://www.linuxserver.io/blog/a-farewell-to-arm-hf)"}
  - {date: "11.02.23:", desc: "Rebase to Alpine 3.17."}
  - {date: "17.10.22:", desc: "Rebase to alpine 3.16, migrate to S6V3"}
  - {date: "28.02.21:", desc: "Rebase to alpine 3.15."}
  - {date: "03.11.21:", desc: "Increase uWSGI buffer size to 32kb."}
  - {date: "16.05.21:", desc: "Add linuxserver wheel index."}
  - {date: "26.02.21:", desc: "Initial Release."}
